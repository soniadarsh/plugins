<?php/** * Database Table Name. * * @apt_service * @apt_timeslot * @apt_dateslot * */class Apt_DB extends Ink_Appointment {    var $db = '';    var $tbl_service = '';    var $tbl_timeslot = '';    var $tbl_dateslot = '';    var $tbl_appointment_data = '';    var $tbl_reminder = '';    var $tbl_transaction = '';    var $tbl_currency = '';    var $use_mysqli = false;    function __construct() {        parent::__construct();        global $wpdb;        $this->db = $wpdb;        $this->tbl_service = $this->db->prefix . 'apt_service';        $this->tbl_timeslot = $this->db->prefix . 'apt_timeslot';        $this->tbl_dateslot = $this->db->prefix . 'apt_dateslot';        $this->tbl_appointment_data = $this->db->prefix . 'appointment_data';        $this->tbl_reminder = $this->db->prefix . 'apt_reminder';        $this->tbl_transaction = $this->db->prefix . 'apt_transaction';        $this->tbl_currency = $this->db->prefix . 'apt_currency';        $this->tbl_apt_leads_dynamic_index = $this->db->prefix . 'apt_leads_dynamic_index';        $this->tbl_apt_lead_field_count = $this->db->prefix . 'apt_lead_field_count';        $this->tbl_apt_lead_field_table = $this->db->prefix . 'apt_lead_field_table';        $this->tbl_apt_lead_select_field = $this->db->prefix . 'apt_lead_select_field';//        $this->tbl_currency = $this->db->prefix . 'apt_currency';        if (function_exists('mysqli_connect')) {            if (defined('WP_USE_EXT_MYSQL')) {                $this->use_mysqli = !WP_USE_EXT_MYSQL;            } elseif (version_compare(phpversion(), '5.5', '>=') || !function_exists('mysql_connect')) {                $this->use_mysqli = true;            } elseif (false !== strpos($GLOBALS['wp_version'], '-')) {                $this->use_mysqli = true;            }        }    }    static function Install() {        $obj = new Apt_DB();        $obj->create_service();        $obj->alter_service_table();        $obj->create_custom_dynamic_index();        $obj->create_custom_lead_field_count();        $obj->create_custom_lead_field_table();        $obj->create_custom_lead_select_table();        $obj->create_timeslot();        $obj->create_datelot();        $obj->create_appointment_data();        $obj->alter_appointment_data_field();        $obj->create_reminder();        $obj->create_transaction();        $obj->create_currency();        $obj->setup_currency();        $obj->option_setup();    }    /**     * Uninstall default options      * This function run on plugin deactivation     */    static function Uninstall() {        /**         * Delete deafult options         */        delete_option('apt_currency_symbol');        delete_option('apt_currency_code');        delete_option('apt_merchaint_email');        delete_option('apt_paypal');        delete_option('return_apt_url');        delete_option('apt_form_head');        delete_option('apt_fix_date');        delete_option('apt_btn_txt');        delete_option('apt_custom_msg');        delete_option('cpt_enable');        delete_option('sms_enable');    }    function create_tbl($table, $cols) {        $fields = implode(',', $cols);        $sql_service = "CREATE TABLE IF NOT EXISTS " . $table . " ({$fields}) CHARSET=utf8 ;";        if ($this->db->get_var("SHOW TABLES LIKE '{$table}'") != $table) {            $this->db->query($sql_service);        }    }    function create_reminder() {        $cols = array(            'apt_reminder_id bigint(20) NOT NULL AUTO_INCREMENT',            'apt_id varchar(255) NOT NULL',            'apt_email varchar(100)  NOT NULL',            'apt_date datetime NOT NULL',            'apt_status varchar(200) NOT NULL',            'UNIQUE KEY apt_reminder_id (apt_reminder_id)'        );        $this->create_tbl($this->tbl_reminder, $cols);    }    function create_service() {        $cols = array(            'service_id mediumint(10) NOT NULL AUTO_INCREMENT',            'service_name varchar(255) NOT NULL',            'service_price varchar(255) NOT NULL',            'service_paid varchar(255) NOT NULL DEFAULT "paid"',            'service_date	date	NOT NULL',            'service_rand int(10) NOT NULL',            'UNIQUE KEY service_id (service_id)'        );        $this->create_tbl($this->tbl_service, $cols);    }    function alter_service_table() {        $tablealter = $this->tbl_service;        $colnew = 'service_paid';        $row = $this->db->get_results("SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNSWHERE table_name =  '". $tablealter ."'  AND column_name = '". $colnew ."'");        if (empty($row)) {            $sql_service_coloumn = "ALTER TABLE " . $tablealter . " ADD " . $colnew . " VARCHAR(255) NOT NULL DEFAULT 'paid' AFTER service_price";            $this->db->query($sql_service_coloumn);        }    }    function create_custom_dynamic_index() {        $leads_dynamic_index = $this->tbl_apt_leads_dynamic_index;        if ($this->db->get_var("show tables like \"$leads_dynamic_index\"") != $leads_dynamic_index) {            $disql = "CREATE TABLE " . $leads_dynamic_index . " (id mediumint(10) NOT NULL AUTO_INCREMENT,lead_name varchar(255) NOT NULL,UNIQUE KEY id (id));";            $this->db->query($disql);            $this->db->insert($leads_dynamic_index, array('lead_name' => 'Label1'));            $this->db->insert($leads_dynamic_index, array('lead_name' => 'Label2'));            $this->db->insert($leads_dynamic_index, array('lead_name' => 'Label3'));            $this->db->insert($leads_dynamic_index, array('lead_name' => 'Label4'));            $this->db->insert($leads_dynamic_index, array('lead_name' => 'Label5'));            //$this->db->insert($leads_dynamic_index, array('lead_name' => 'Label6'));        }    }    function create_custom_lead_field_count() {        $lead_field_count = $this->tbl_apt_lead_field_count;        if ($this->db->get_var("show tables like \"$lead_field_count\" ") != $lead_field_count) {            $fcsql = "CREATE TABLE " . $lead_field_count . " (ID mediumint(10) NOT NULL AUTO_INCREMENT,text_name varchar(255) NOT NULL,text_value varchar(255) NOT NULL,text_label varchar(255) NOT NULL,required varchar(255) NOT NULL,randvalue int(10) NOT NULL,PRIMARY KEY ID (ID));";            $this->db->query($fcsql);        }    }    function create_custom_lead_field_table() {        $lead_field_table = $this->tbl_apt_lead_field_table;        if ($this->db->get_var("show tables like \"$lead_field_table\" ") != $lead_field_table) {            $ftsql = "CREATE TABLE " . $lead_field_table . " (PID mediumint(10) NOT NULL AUTO_INCREMENT,ID mediumint(10) NOT NULL,field_name varchar(255) NOT NULL,text_name varchar(255) NOT NULL,field_id varchar(255) NOT NULL,randvalue int(10) NOT NULL,PRIMARY KEY PID (PID));";            $this->db->query($ftsql);        }    }    function create_custom_lead_select_table() {        $lead_select_field = $this->tbl_apt_lead_select_field;        if ($this->db->get_var("show tables like \"$lead_select_field\" ") != $lead_select_field) {            $sfsql = "CREATE TABLE " . $lead_select_field . " (ID mediumint(10) NOT NULL AUTO_INCREMENT,text_value varchar(255) NOT NULL,randvalue int(10) NOT NULL,PRIMARY KEY ID (ID));";            $this->db->query($sfsql);        }    }    function alter_appointment_data_field() {        //Adding required column        $column_required = $this->db->get_var("SHOW COLUMNS FROM $this->tbl_appointment_data LIKE 'fieldlabel1'");        if (!isset($column_required)) {            $this->db->query("ALTER TABLE $this->tbl_appointment_data  ADD `fieldlabel1` VARCHAR(100) NOT NULL AFTER `apt_data_message`, ADD `fieldlabel2` VARCHAR(255) NULL AFTER `fieldlabel1`, ADD `fieldlabel3` VARCHAR(255) NULL AFTER `fieldlabel2`, ADD `fieldlabel4` VARCHAR(255) NULL AFTER `fieldlabel3`, ADD `fieldlabel5` VARCHAR(255) NULL AFTER `fieldlabel4`");        }                $this->db->query("ALTER TABLE $this->tbl_appointment_data MODIFY COLUMN `apt_data_message` VARCHAR(255) NULL");            }    function create_timeslot() {        $cols = array(            'timeslot_id int(11) NOT NULL AUTO_INCREMENT',            'service_id int(11)  NOT NULL',            'timeslot_day varchar(100)  NOT NULL',            'timeslot_start_time varchar(100) NOT NULL',            'timeslot_end_time varchar(100) NOT NULL',            'timeslot_date	date	NOT NULL',            'timeslot_rand int(10) NOT NULL',            'booking_number_time int(10) NOT NULL',            'UNIQUE KEY timeslot_id (timeslot_id)'        );        $this->create_tbl($this->tbl_timeslot, $cols);    }    function create_datelot() {        $cols = array(            'DSID int(11) NOT NULL AUTO_INCREMENT',            'service_id int(11)  NOT NULL',            'dsi_str_date varchar(100)  NOT NULL',            'dsi_end_date varchar(100)  NOT NULL',            'dsi_sun varchar(100)  NOT NULL',            'dsi_mon varchar(100) NOT NULL',            'dsi_tue varchar(100) NOT NULL',            'dsi_wed varchar(100) NOT NULL',            'dsi_thu varchar(100) NOT NULL',            'dsi_fri varchar(100) NOT NULL',            'dsi_sat varchar(100) NOT NULL',            'timeslot_date	date	NOT NULL',            'timeslot_rand int(10) NOT NULL',            'UNIQUE KEY DSID (DSID)'        );        $this->create_tbl($this->tbl_dateslot, $cols);    }    function create_appointment_data() {        $cols = array(            'APTID int(11) NOT NULL AUTO_INCREMENT',            'service_id int(11)  NOT NULL',            'apt_data_date varchar(100)  NOT NULL',            'apt_data_persion_name varchar(100)  NOT NULL',            'apt_data_service_name varchar(100)  NOT NULL',            'apt_data_time varchar(100)  NOT NULL',            'apt_data_price varchar(100)  NOT NULL',            'apt_data_email varchar(100)  NOT NULL',            'apt_data_mobile varchar(100)  NULL',            'apt_data_message varchar(255) NULL',            'fieldlabel1 varchar(255) NULL',            'fieldlabel2 varchar(255) NULL',            'fieldlabel3 varchar(255) NULL',            'fieldlabel4 varchar(255) NULL',            'fieldlabel5 varchar(255) NULL',            'apt_data_rand int(10) NOT NULL',            'apt_data_current_date varchar(100) NOT NULL',            'apt_payment_method varchar(50) NOT NULL',            'ddmmyyy INT(11) NOT NULL',            'UNIQUE KEY APTID (APTID)',        );        $this->create_tbl($this->tbl_appointment_data, $cols);    }    function create_transaction() {        $cols = array(            'TXNID int(11) NOT NULL AUTO_INCREMENT',            'TXN_ID int(11) NOT NULL',            'service_id int(11)  NOT NULL',            'apt_txn_booking_date varchar(100) NOT NULL',            'apt_txn_service_name varchar(100) NOT NULL',            'apt_txn_price varchar(100) NOT NULL',            'apt_txn_payer_email varchar(100) NOT NULL',            'apt_txn_txnid varchar(50) NOT NULL',            'apt_txn_status varchar(100) NOT NULL',            'apt_data_rand int(10) NOT NULL',            'UNIQUE KEY TXNID (TXNID)',        );        $this->create_tbl($this->tbl_transaction, $cols);    }    function create_currency() {        $cols = array(            'apt_c_id int(8) NOT NULL AUTO_INCREMENT',            'apt_c_name varchar(100) NOT NULL',            'apt_c_code varchar(10) NOT NULL',            'apt_c_symbol varchar(10) NOT NULL',            'apt_c_des varchar(500) NOT NULL',            'PRIMARY KEY c_id(apt_c_id)',        );        $this->create_tbl($this->tbl_currency, $cols);    }    function setup_currency() {        $flag = get_option('apt_insert_currency_flag');        $val = $this->TableExists($this->tbl_currency);        if (!$flag) {            $currencies = $this->default_currencies();            foreach ($currencies as $currency) {                $insert_currency['apt_c_id'] = $currency_array[0];                $insert_currency['apt_c_name'] = $currency_array[1];                $insert_currency['apt_c_code'] = $currency_array[2];                $insert_currency['apt_c_symbol'] = $currency_array[3];                $insert_currency['apt_c_des'] = $currency_array[4];                $this->db->insert($this->tbl_currency, $currency);            }            update_option('apt_insert_currency_flag', true);        }    }    function get_tables() {        $tableList = array();        if ($this->use_mysqli) {            $res = mysqli_query($this->db->dbh, "SHOW TABLES");            while ($cRow = mysqli_fetch_array($res)) {                $tableList[] = $cRow[0];            }            return $tableList;        } else {            $res = mysql_query($this->db->dbh, "SHOW TABLES");            while ($cRow = mysql_fetch_array($res)) {                $tableList[] = $cRow[0];            }            return $tableList;        }    }    function TableExists($tablename) {        // Get a list of tables contained within the database.        $result = $this->get_tables();        $rcount = count($result);        // Check each in list for a match.        for ($i = 0; $i < $rcount; $i++) {            if (in_array($tablename, $result)) {                return $tablename;            }        }        return false;    }    function default_currencies() {        $currencies = array(            array(                'apt_c_name' => __('Australian Dollar', 'appointment'),                'apt_c_code' => 'AUD',                'apt_c_symbol' => 'A$',                'apt_c_des' => '',            ),            array(                'apt_c_name' => __('Brazilian Real', 'appointment'),                'apt_c_code' => 'BRL',                'apt_c_symbol' => 'R$',                'apt_c_des' => __('This currency is supported as a payment currency and a currency balance for in-country PayPal accounts only.', 'appointment'),            ),            array(                'apt_c_name' => __('Canadian Dollar', 'appointment'),                'apt_c_code' => 'CAD',                'apt_c_symbol' => '$',                'apt_c_des' => '',            ),            array(                'apt_c_name' => __('Czech Koruna', 'appointment'),                'apt_c_code' => 'CZK',                'apt_c_symbol' => 'Kc',                'apt_c_des' => '',            ),            array(                'apt_c_name' => __('Danish Krone', 'appointment'),                'apt_c_code' => 'DKK',                'apt_c_symbol' => 'Kr',                'apt_c_des' => '',            ),            array(                'apt_c_name' => __('Euro', 'appointment'),                'apt_c_code' => 'EUR',                'apt_c_symbol' => '&euro;',                'apt_c_des' => '',            ),            array(                'apt_c_name' => __('Hong Kong Dollar', 'appointment'),                'apt_c_code' => 'HKD',                'apt_c_symbol' => '$',                'apt_c_des' => '',            ),            array(                'apt_c_name' => __('Hungarian Forint', 'appointment'),                'apt_c_code' => 'HUF',                'apt_c_symbol' => 'Ft',                'apt_c_des' => '',            ),            array(                'apt_c_name' => __('Israeli New Sheqel', 'appointment'),                'apt_c_code' => 'ILS',                'apt_c_symbol' => 'ILS',                'apt_c_des' => '',            ),            array(                'apt_c_name' => __('Japanese Yen', 'appointment'),                'apt_c_code' => 'JPY',                'apt_c_symbol' => '&#165;',                'apt_c_des' => '',            ),            array(                'apt_c_name' => __('Malaysian Ringgit', 'appointment'),                'apt_c_code' => 'MYR',                'apt_c_symbol' => 'RM',                'apt_c_des' => __('This currency is supported as a payment currency and a currency balance for in-country PayPal accounts only', 'appointment'),            ),            array(                'apt_c_name' => __('Mexican Peso', 'appointment'),                'apt_c_code' => 'MXN',                'apt_c_symbol' => '$',                'apt_c_des' => '',            ),            array(                'apt_c_name' => __('Norwegian Krone', 'appointment'),                'apt_c_code' => 'NOK',                'apt_c_symbol' => 'Kr',                'apt_c_des' => '',            ),            array(                'apt_c_name' => __('New Zealand Dollar', 'appointment'),                'apt_c_code' => 'NZD',                'apt_c_symbol' => '$',                'apt_c_des' => '',            ),            array(                'apt_c_name' => __('Philippine Peso', 'appointment'),                'apt_c_code' => 'PHP',                'apt_c_symbol' => '&#8369;',                'apt_c_des' => '',            ),            array(                'apt_c_name' => __('Polish Zloty', 'appointment'),                'apt_c_code' => 'PLN',                'apt_c_symbol' => 'zl',                'apt_c_des' => '',            ),            array(                'apt_c_name' => __('Pound Sterling', 'appointment'),                'apt_c_code' => 'GBP',                'apt_c_symbol' => '&#163;',                'apt_c_des' => '',            ),            array(                'apt_c_name' => __('Singapore Dollar', 'appointment'),                'apt_c_code' => 'SGD',                'apt_c_symbol' => '$',                'apt_c_des' => '',            ),            array(                'apt_c_name' => __('Swedish Krona', 'appointment'),                'apt_c_code' => 'SEK',                'apt_c_symbol' => 'kr',                'apt_c_des' => '',            ),            array(                'apt_c_name' => __('Swiss Franc', 'appointment'),                'apt_c_code' => 'CHF',                'apt_c_symbol' => 'CHF',                'apt_c_des' => '',            ),            array(                'apt_c_name' => __('Taiwan New Dollar', 'appointment'),                'apt_c_code' => 'TWD',                'apt_c_symbol' => 'NT$',                'apt_c_des' => '',            ),            array(                'apt_c_name' => __('Thai Baht', 'appointment'),                'apt_c_code' => 'THB',                'apt_c_symbol' => 'THB',                'apt_c_des' => '',            ),            array(                'apt_c_name' => __('Turkish Lira', 'appointment'),                'apt_c_code' => 'TRY',                'apt_c_symbol' => 'TRY',                'apt_c_des' => '',            ),            array(                'apt_c_name' => __('U.S. Dollar', 'appointment'),                'apt_c_code' => 'USD',                'apt_c_symbol' => '$',                'apt_c_des' => '',            ),            array(                'apt_c_name' => __('Russian Ruble', 'appointment'),                'apt_c_code' => 'RUB',                'apt_c_symbol' => 'RUB',                'apt_c_des' => '',            ),        );        return $currencies;    }    function option_setup() {        //get option data        if (!get_option('apt_currency_symbol')) {            add_option('apt_currency_symbol', '$');        }        if (!get_option('apt_currency_code')) {            add_option('apt_currency_code', 'USD');        }        if (!get_option('apt_merchaint_email')) {            add_option('apt_merchaint_email', 'myaccount@xyz.com');        }        if (!get_option('apt_paypal')) {            add_option('apt_paypal', 'paypal');        }        if (!get_option('return_apt_url')) {            add_option('return_apt_url', site_url());        }        if (!get_option('apt_form_head')) {            add_option('apt_form_head', __('Book Your Appointment', 'appointment'));        }        if (!get_option('apt_fix_date')) {            add_option('apt_fix_date', __('Fix Appointment Date', 'appointment'));        }        if (!get_option('apt_btn_txt')) {            add_option('apt_btn_txt', __('Book Appointment', 'appointment'));        }        if (!get_option('apt_custom_msg')) {            add_option('apt_custom_msg', __('Your Custom Message', 'appointment'));        }        if (!get_option('cpt_enable')) {            add_option('cpt_enable', 'off');        }        if (!get_option('sms_enable')) {            add_option('sms_enable', 'off');        }        if (!get_option('apt_reminder_mail')) {            add_option('apt_reminder_mail', 'no');        }        if (!get_option('apt_reminder_day')) {            add_option('apt_reminder_day', '1');        }        if (!get_option('apt_reminder_to_admin')) {            add_option('apt_reminder_to_admin', 'no');        }        if (!get_option('apt_form_style')) {            add_option('apt_form_style', '0');        }        if (!get_option('apt_dformat')) {            add_option('apt_dformat', '1');        }    }}